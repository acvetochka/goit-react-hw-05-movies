{"version":3,"file":"static/js/829.763cc7bf.chunk.js","mappings":"8PAEMA,EAAaC,EAAAA,EAAAA,GAAH,+DAIVC,EAAaD,EAAAA,EAAAA,GAAH,qRAUVE,EAAOF,EAAAA,EAAAA,EAAH,8CAIJG,EAAUH,EAAAA,EAAAA,EAAH,+C,SCab,MA5BA,WACE,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,IAAYN,GACTO,MAAK,SAAAC,GAAG,OAAIJ,GAAW,OAAII,GAAnB,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACV,KAGF,0BACE,SAACL,EAAD,UACGQ,GACCA,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACnB,EAAD,YACE,UAACC,EAAD,sBAAeiB,MACf,SAAChB,EAAD,UAAUiB,MAFKF,EADP,OAYrB,C,8LC7BDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NALN,SASeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBN,EAAAA,EAAAA,IAAU,mCAAoCC,GADvE,cACQM,EADR,yBAESA,EAASC,KAAKC,SAFvB,2EAKeC,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBX,EAAAA,EAAAA,IAAA,8BACEW,EADF,mBAErBV,GAHJ,cACQM,EADR,yBAKSA,EAASC,KAAKC,SALvB,2EAOeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCf,GAAjC,uFACyBG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,mBAAyCI,GADlE,cACQM,EADR,yBAGSA,EAASC,MAHlB,2EAMeK,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBhB,GAAzB,uFACyBG,EAAAA,EAAAA,IAAA,gBACZH,EADY,2BAErBI,GAHJ,cACQM,EADR,yBAKSA,EAASC,KAAKM,MALvB,2EAQezB,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BQ,GAA3B,uFACyBG,EAAAA,EAAAA,IAAA,gBACZH,EADY,2BAErBI,GAHJ,cACQM,EADR,yBAKSA,EAASC,KAAKC,SALvB,kE","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","helpers/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ReviewList = styled.ul`\n  padding: 20px;\n  list-style: none;\n`;\nconst ReviewItem = styled.li`\n  background-color: #f2eee6;\n  padding: 20px;\n  font-size: 14px;\n  text-align: justify;\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n  margin-bottom: 20px;\n`;\n\nconst Name = styled.p`\n  font-weight: bold;\n`;\n\nconst Comment = styled.p`\n  font-style: italic;\n`;\n\nexport { ReviewList, ReviewItem, Name, Comment };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from 'helpers/api';\nimport { ReviewList, ReviewItem, Name, Comment } from './Review.styled';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    if (!movieId) return;\n    fetchReview(movieId)\n      .then(res => setReviews([...res]))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ReviewList>\n        {reviews &&\n          reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <Name>Author: {author}</Name>\n              <Comment>{content}</Comment>\n            </ReviewItem>\n          ))}\n        {/* : (\n          <li>Oops, no one has left anything here yet</li>\n        )} */}\n      </ReviewList>\n    </div>\n  );\n}\n\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNWIwYzYzN2RhYzFmZmFlMThjZDRmYmRjMjc1ZWFhOSIsInN1YiI6IjY0OTVjMzgzZDVmZmNiMDBlMjA1NzIzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.x9lPMVl4nfFlN901y3yy6-AcoB6SAlcKg0T-FQPITKg',\n  },\n};\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get('/trending/all/day?language=en-US', options);\n  return response.data.results;\n}\n\nasync function fetchMovieSearch(query) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&language=en-US`,\n    options\n  );\n  return response.data.results;\n}\nasync function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?language=en-US`, options);\n  //   console.log(response.data);\n  return response.data;\n}\n\nasync function fetchCast(id) {\n  const response = await axios.get(\n    `movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data.cast;\n}\n\nasync function fetchReview(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?language=en-US`,\n    options\n  );\n  return response.data.results;\n}\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieSearch,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReview,\n};\n"],"names":["ReviewList","styled","ReviewItem","Name","Comment","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReview","then","res","catch","err","console","log","map","id","author","content","axios","options","method","headers","accept","Authorization","fetchTrendingMovies","response","data","results","fetchMovieSearch","query","fetchMovieDetails","fetchCast","cast"],"sourceRoot":""}