{"version":3,"file":"static/js/829.6a714799.chunk.js","mappings":"iPAEMA,EAAaC,EAAAA,QAAAA,GAAH,+DAIVC,EAAaD,EAAAA,QAAAA,GAAH,uXAaVE,EAAOF,EAAAA,QAAAA,EAAH,8CAIJG,EAAUH,EAAAA,QAAAA,EAAH,+C,SCcb,MAhCA,WACE,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,IAAcN,EAAS,WACpBO,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAAIE,QACtBN,GAAW,OAAIK,GAChB,IACAE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACZ,KAGF,0BACE,SAACL,EAAD,UACGQ,EAAQY,OACPZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACtB,EAAD,YACE,UAACC,EAAD,sBAAeoB,MACf,SAACnB,EAAD,UAAUoB,MAFKF,EADP,KAOZ,0EAKT,C,2KCjCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NALN,SASeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBN,EAAAA,EAAAA,IAAU,mCAAoCC,GADvE,cACQM,EADR,yBAESA,EAASC,KAAKlB,SAFvB,2EAKemB,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBV,EAAAA,EAAAA,IAAA,8BACEU,EADF,mBAErBT,GAHJ,cACQM,EADR,yBAKSA,EAASC,KAAKlB,SALvB,2EAQeqB,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCd,GAAjC,uFACyBG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,mBAAyCI,GADlE,cACQM,EADR,yBAESA,EAASC,MAFlB,2EAKetB,EAAc,EAAdA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BW,EAAIe,GAAjC,uFACyBZ,EAAAA,EAAAA,IAAA,gBACZH,EADY,YACNe,EADM,mBAErBX,GAHJ,cACQM,EADR,yBAKSA,EAASC,MALlB,kE","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","helpers/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ReviewList = styled.ul`\n  padding: 20px;\n  list-style: none;\n`;\nconst ReviewItem = styled.li`\n  background-color: #f2eee66e;\n  padding: 20px;\n  font-size: 14px;\n  text-align: justify;\n  border-radius: 8px;\n  overflow: hidden;\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n  box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n`;\n\nconst Name = styled.p`\n  font-weight: bold;\n`;\n\nconst Comment = styled.p`\n  font-style: italic;\n`;\n\nexport { ReviewList, ReviewItem, Name, Comment };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAddition } from 'helpers/api';\nimport { ReviewList, ReviewItem, Name, Comment } from './Review.styled';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchAddition(movieId, 'reviews')\n      .then(res => {\n        const reviewArr = res.results;\n        setReviews([...reviewArr]);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ReviewList>\n        {reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <Name>Author: {author}</Name>\n              <Comment>{content}</Comment>\n            </ReviewItem>\n          ))\n        ) : (\n          <div>Wie don't have any reviews for this movie</div>\n        )}\n      </ReviewList>\n    </div>\n  );\n}\n\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNWIwYzYzN2RhYzFmZmFlMThjZDRmYmRjMjc1ZWFhOSIsInN1YiI6IjY0OTVjMzgzZDVmZmNiMDBlMjA1NzIzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.x9lPMVl4nfFlN901y3yy6-AcoB6SAlcKg0T-FQPITKg',\n  },\n};\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get('/trending/all/day?language=en-US', options);\n  return response.data.results;\n}\n\nasync function fetchMovieSearch(query) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&language=en-US`,\n    options\n  );\n  return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?language=en-US`, options);\n  return response.data;\n}\n\nasync function fetchAddition(id, param) {\n  const response = await axios.get(\n    `movie/${id}/${param}?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nasync function fetchGenre() {\n  const response = await axios.get(`genre/movie/list`, options);\n  return response.data;\n}\n\nasync function fetchByGenres(genre) {\n  const response = await axios.get(\n    `discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=${genre}`,\n    options\n  );\n  return response.data;\n  // .request(options)\n  // .then(function (response) {\n  //   console.log(response.data);\n  // })\n  // .catch(function (error) {\n  //   console.error(error);\n  // });\n}\n\n// /discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=Action\nexport {\n  fetchTrendingMovies,\n  fetchMovieSearch,\n  fetchMovieDetails,\n  fetchAddition,\n  fetchGenre,\n  fetchByGenres,\n};\n"],"names":["ReviewList","styled","ReviewItem","Name","Comment","movieId","useParams","useState","reviews","setReviews","useEffect","fetchAddition","then","res","reviewArr","results","catch","err","console","log","length","map","id","author","content","axios","options","method","headers","accept","Authorization","fetchTrendingMovies","response","data","fetchMovieSearch","query","fetchMovieDetails","param"],"sourceRoot":""}